---
title: "XML_GHS_Searcher"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(PubChemR)
```

```{r}
GHS_searcher<-function(result_json_object){
  result<-result_json_object
  for (i in 1:length(result[["result"]][["Hierarchies"]][["Hierarchy"]])){
    if(result[["result"]][["Hierarchies"]][["Hierarchy"]][[i]][["SourceName"]]=="GHS Classification (UNECE)"){
      return(i)
    }
          
  }
}
```

```{r}
hazards_retriever<-function(index,result_json_object){
  result<-result_json_object
  hierarchy<-result[["result"]][["Hierarchies"]][["Hierarchy"]][[index]]
  i<-1
  output_list<-rep(NA,length(hierarchy[["Node"]]))
  while(str_detect(hierarchy[["Node"]][[i]][["Information"]][["Name"]],"H") & i<length(hierarchy[["Node"]])){
    output_list[i]<-hierarchy[["Node"]][[i]][["Information"]][["Name"]]
    i<-i+1
  }
  return(output_list[!is.na(output_list)])
}
```

```{r}

chemical_vec<-c("SULFUR", "CAPTAN", "THIRAM", "METAM-POTASSIUM", "METAM-SODIUM", "MALATHION", "PENDIMETHALIN", "CYPRODINIL", "BIFENAZATE")

hazard_func <- function(chem_name){
  result<-get_pug_rest(identifier = chem_name, namespace = "name", domain = "compound",operation="classification", output = "JSON")
  return(hazards_retriever(GHS_searcher(result),result))
}

chem_hazard <- sapply(chemical_vec,hazard_func)


#result_captan<-get_pug_rest(identifier = "CAPTAN", namespace = "name", domain = "compound",operation="classification", output = "JSON")
#hazards_retriever(GHS_searcher(result_captan),result_captan)

#result_d<-get_pug_rest(identifier = "81301", namespace = "cid", domain = "compound",operation="classification", output = "JSON")
#hazards_retriever(GHS_searcher(result_d),result_d)

```
